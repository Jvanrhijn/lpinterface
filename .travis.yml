dist:
  - trusty 

sudo:
  require
    
language: 
  - cpp

cache: ccache

addons:
  apt:
    update: true
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - llvm
      - lcov
      - cmake-data
      - binutils-dev
      - libiberty-dev
      - cmake
      - libgmp3-dev
      - ccache
      - libstdc++
      - clang-tidy

matrix:
  include:
   # gcc 
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - lcov
      env: BUILD_TYPE=Release MATRIX_EVAL="CC=gcc-6 && CXX=g++-6" PAGES=YES COVERAGE=YES

    - os: linux
    S  compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env: BUILD_TYPE=Debug MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env: BUILD_TYPE=Release MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env: BUILD_TYPE=Debug MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env: BUILD_TYPE=Release MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env: BUILD_TYPE=Debug MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"

    # clang
    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
            - g++-7
      env: BUILD_TYPE=Release MATRIX_EVAL="CC=clang-3.6 && CXX=clang++-3.6"

    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
            - g++-7
      env: BUILD_TYPE=Debug MATRIX_EVAL="CC=clang-3.6 && CXX=clang++-3.6"

    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
          packages:
            - clang-3.7
            - g++-7
      env: BUILD_TYPE=Release MATRIX_EVAL="CC=clang-3.7 && CXX=clang++-3.7"

    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
          packages:
            - clang-3.7
            - g++-7
      env: BUILD_TYPE=Debug MATRIX_EVAL="CC=clang-3.7 && CXX=clang++-3.7"

    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-4.0
            - g++-7
      env: BUILD_TYPE=Release MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"

    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-4.0
            - g++-7
      env: BUILD_TYPE=Debug MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"

    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-5.0
            - g++-7
      env: BUILD_TYPE=Debug MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-5.0
            - g++-7
      env: BUILD_TYPE=Release MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-6.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-6.0
            - g++-7
      env: BUILD_TYPE=Debug MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"

    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-6.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-6.0
            - g++-7
      env: BUILD_TYPE=Release MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"


before_install:
  - sudo apt-get install doxygen

script:
  - ls -l /usr/lib/ccache
  # trick for using ccache, stolen from rapidcheck
  - mkdir -p ${HOME}/bin
  - export PATH="${HOME}/bin:${PATH}"
  - ln -sf /usr/bin/ccache ${HOME}/bin/"${CXX}"
  - which ${CXX}
  - which ${CC}
  # generate build files
  - cmake -H. -Bbuild -DLPINT_ENABLE_TESTING=1 -DCOVERAGE=1 -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCI=1
  # run clang-tidy
  - cd build 
  - make clang-tidy
  - cd ..
  # collect ccache stats
  - ccache --show-stats > ccache_before
  - cmake --build build -- -j4
  - ccache --show-stats > ccache_after
  - diff -U100 ccache_before ccache_after || true

after_success:
  - cd ${TRAVIS_BUILD_DIR}/build
  - lcov --capture --directory . --initial --output-file coverage.info
  - ./tests/unit_tests
  - lcov --capture --directory . --output-file coverage.info
  - lcov --remove coverage.info '/usr/*' '*rapidcheck*' '*gtest*' -o coverage.info
  - lcov --list coverage.info
  - bash <(curl -s https://codecov.io/bash) && echo "Uploaded code coverage"
  - cd ${TRAVIS_BUILD_DIR}
  - test $PAGES = YES && doxygen docs/config 

before_script:
  - eval "${MATRIX_EVAL}"
  - wget https://soplex.zib.de/download/release/soplex-4.0.2.tgz
  - tar xzf soplex-4.0.2.tgz
  - cd soplex-4.0.2
  - cmake -H. -Bbuild
  - cmake --build build -- -j4
  - cd build && sudo make install
  - cd ${TRAVIS_BUILD_DIR}

deploy:
  provider: pages
  skip_cleanup: true
  local_dir: docs/html
  github_token: $GH_REPO_TOKEN
  on:
    branch: master
    condition: $PAGES = YES